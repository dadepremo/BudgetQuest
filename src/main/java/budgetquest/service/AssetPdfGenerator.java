/*
package budgetquest.service;

import budgetquest.model.Asset;
import com.itextpdf.text.*;
import com.itextpdf.text.pdf.*;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import java.io.FileOutputStream;
import java.math.BigDecimal;
import java.time.format.DateTimeFormatter;

public class AssetPdfGenerator {

    private static final Logger logger = LogManager.getLogger(AssetPdfGenerator.class);

    public void generateAssetPdf(Asset asset, String filePath) {
        try {
            Document document = new Document(PageSize.A4, 50, 50, 70, 50);
            PdfWriter.getInstance(document, new FileOutputStream(filePath));
            document.open();

            // Logo (optional)
            try {
                Image logo = Image.getInstance(getClass().getResource("/img/logo.png"));
                logo.scaleAbsolute(60, 60);
                logo.setAlignment(Image.ALIGN_RIGHT);
                document.add(logo);
            } catch (Exception ignored) {}

            // Title
            Font titleFont = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 22, BaseColor.DARK_GRAY);
            Paragraph title = new Paragraph("üìÑ Asset Report", titleFont);
            title.setAlignment(Element.ALIGN_CENTER);
            title.setSpacingAfter(25);
            document.add(title);

            // Section: Asset Info
            addSectionTitle(document, "üìÅ Asset Details");
            PdfPTable assetTable = createTable();
            addAssetRows(assetTable, asset);
            document.add(assetTable);

            // Section: Category (if exists)
            if (asset.getCategoryName() != null) {
                addSectionTitle(document, "üóÇÔ∏è Category Information");
                PdfPTable catTable = createTable();
                addStyledRow(catTable, "Category Name", asset.getCategoryName());
                document.add(catTable);
            }

            // Footer
            Paragraph footer = new Paragraph("Generated by BudgetQuest ‚Ä¢ " + java.time.LocalDate.now(),
                    FontFactory.getFont(FontFactory.HELVETICA_OBLIQUE, 10, BaseColor.GRAY));
            footer.setAlignment(Element.ALIGN_CENTER);
            footer.setSpacingBefore(40f);
            document.add(footer);

            document.close();
            logger.info("üìÑ Asset PDF created at: " + filePath);
        } catch (Exception e) {
            logger.error("‚ùå Failed to generate asset PDF", e);
        }
    }

    private void addSectionTitle(Document doc, String titleText) throws DocumentException {
        Font sectionFont = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 14, BaseColor.BLACK);
        Paragraph section = new Paragraph(titleText, sectionFont);
        section.setSpacingBefore(20f);
        section.setSpacingAfter(10f);
        doc.add(section);
        LineSeparator line = new LineSeparator();
        line.setLineColor(BaseColor.LIGHT_GRAY);
        doc.add(line);
    }

    private PdfPTable createTable() throws DocumentException {
        PdfPTable table = new PdfPTable(2);
        table.setWidthPercentage(100);
        table.setWidths(new float[]{1.5f, 3.5f});
        table.setSpacingBefore(10f);
        return table;
    }

    private void addAssetRows(PdfPTable table, Asset a) {
        addStyledRow(table, "Name", a.getName());
        addStyledRow(table, "Type", a.getType());
        addStyledRow(table, "Value", format(a.getValue()));
        addStyledRow(table, "Acquired Date", formatDate(a.getAcquiredDate()));
        addStyledRow(table, "Is Liquid", a.isLiquid() ? "Yes" : "No");
        addStyledRow(table, "Notes", a.getNotes());
    }

    private void addStyledRow(PdfPTable table, String label, String value) {
        BaseColor bg = new BaseColor(245, 245, 245);
        Font labelFont = FontFactory.getFont(FontFactory.HELVETICA, 11, BaseColor.GRAY);
        Font valueFont = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 11, BaseColor.BLACK);

        PdfPCell labelCell = new PdfPCell(new Phrase(label, labelFont));
        labelCell.setBackgroundColor(bg);
        labelCell.setPadding(5);

        PdfPCell valueCell = new PdfPCell(new Phrase(value != null ? value : "‚Äî", valueFont));
        valueCell.setPadding(5);

        table.addCell(labelCell);
        table.addCell(valueCell);
    }

    private String format(BigDecimal value) {
        return value != null ? "$" + value.setScale(2, BigDecimal.ROUND_HALF_UP) : "‚Äî";
    }

    private String formatDate(java.time.LocalDate date) {
        return date != null ? date.format(DateTimeFormatter.ofPattern("MMM dd, yyyy")) : "‚Äî";
    }
}

*/
